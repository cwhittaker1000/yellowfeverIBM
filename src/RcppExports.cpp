// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// multi_probability_multinomial_process_internal
Rcpp::XPtr<process_t> multi_probability_multinomial_process_internal(Rcpp::XPtr<CategoricalVariable> variable, const std::string source_state, const std::vector<std::string> destination_states, const Rcpp::XPtr<DoubleVariable> rate_variable, const std::vector<double> destination_probabilities);
RcppExport SEXP _yellowfeverIBM_multi_probability_multinomial_process_internal(SEXP variableSEXP, SEXP source_stateSEXP, SEXP destination_statesSEXP, SEXP rate_variableSEXP, SEXP destination_probabilitiesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::XPtr<CategoricalVariable> >::type variable(variableSEXP);
    Rcpp::traits::input_parameter< const std::string >::type source_state(source_stateSEXP);
    Rcpp::traits::input_parameter< const std::vector<std::string> >::type destination_states(destination_statesSEXP);
    Rcpp::traits::input_parameter< const Rcpp::XPtr<DoubleVariable> >::type rate_variable(rate_variableSEXP);
    Rcpp::traits::input_parameter< const std::vector<double> >::type destination_probabilities(destination_probabilitiesSEXP);
    rcpp_result_gen = Rcpp::wrap(multi_probability_multinomial_process_internal(variable, source_state, destination_states, rate_variable, destination_probabilities));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_yellowfeverIBM_multi_probability_multinomial_process_internal", (DL_FUNC) &_yellowfeverIBM_multi_probability_multinomial_process_internal, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_yellowfeverIBM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
